<?php

/**
 * @file
 */

/**
 * Implements hook_url_outbound_alter().
 *
 * Override urls for configured front paths of all kinds, also overrides primary
 * tabs.
 * @see url()
 */
function frontpage_multilingual_url_outbound_alter(&$path, &$options, $original_path) {
  if ($options['external']) {
    return;
  }

  global $language;
  $paths_per_language = config_get('frontpage_multilingual.settings', 'languages');
  if (in_array($path, array_values($paths_per_language))) {
    $path = '';
  }
}

/**
 * Implements hook_url_inbound_alter().
 *
 * Get the right content for this front page.
 * @see backdrop_get_normal_path()
 */
function frontpage_multilingual_url_inbound_alter(&$path, $original_path, $path_language) {
  global $language, $base_path;

  if (backdrop_is_front_page()) {
    $paths_per_language = config_get('frontpage_multilingual.settings', 'languages');
    if (isset($paths_per_language[$language->langcode]) && menu_get_item($paths_per_language[$language->langcode])) {
      $path = $paths_per_language[$language->langcode];
    }
    else {
      // Fallback when no entry in config yet, either because the module has
      // just been installed or a new language has been added.
      // Fallback when node/layout/view has been deleted.
      $path = config_get('system.core', 'site_frontpage');
    }
  }
}

/**
 * Implements hook_menu().
 *
 * Settings form for frontpage_multilingual.
 */
function frontpage_multilingual_menu() {
  $items = array();
  $items['admin/config/system/frontpages'] = array(
    'title' => 'Website-Frontpages',
    'description' => 'Website frontpage(s) configuration per language',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('frontpage_multilingual_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Settings form for this module.
 */
function frontpage_multilingual_settings() {
  $form = array();
  $form['#config'] = 'frontpage_multilingual.settings';
  $form['#tree'] = TRUE;

  $languages = language_list(TRUE);
  $config = config_get('frontpage_multilingual.settings');

  $form['languages'] = array(
    '#type' => 'fieldset',
    '#title' => t('Set the frontpage per language'),
    '#description' => t('This has to be the system path, for instance "node/4" for a node, or the path of a layout (like "home") or a view.'),
  );
  foreach ($languages as $langcode => $language) {
    $title = t('Frontpage for %lang', array(
      '%lang' => $language->name,
    ));
    $form['languages'][$langcode] = array(
      '#type' => 'textfield',
      '#title' => $title,
      '#default_value' => isset($config['languages'][$langcode]) ? $config['languages'][$langcode] : '',
      '#size' => 36,
      '#field_prefix' => url(NULL, array('absolute' => TRUE, 'language' => $language)),
    );
  }
  return system_settings_form($form);
}

/**
 * Custom validation function.
 *
 * Validate values and cleanup form_state.
 */
function frontpage_multilingual_settings_validate($form, &$form_state) {
  unset($form_state['values']['actions']);
  foreach ($form_state['values']['languages'] as $langcode => $path) {
    if (!backdrop_valid_path($path)) {
      form_error($form['languages'][$langcode], t('%path is not a valid path', array(
        '%path' => $path,
      )));
    }
    if ($path == '<front>' || url_is_external($path)) {
      form_error($form['languages'][$langcode], t('%path is not usable as frontpage path', array(
        '%path' => $path,
      )));
    }
  }
}

/**
 * Implements hook_config_info().
 */
function frontpage_multilingual_config_info() {
  $prefixes['frontpage_multilingual.settings'] = array(
    'label' => t('Frontpage Multilingual settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Override default setting description, add a link to this module's form.
 */
function frontpage_multilingual_form_system_site_information_settings_alter(&$form, &$form_state, $form_id) {
  $form['front_page']['site_frontpage']['#description'] = t('Note that this setting is only used as fallback. To configure the front page per language, set the values in the overriding !formlink.', array(
    '!formlink' => l(t('form'), 'admin/config/system/frontpages'),
  ));
}
